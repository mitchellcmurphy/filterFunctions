{"version":3,"file":"main.bundle.js","sources":["webpack:///./src/app/environment.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/home/index.ts","webpack:///./~/css-loader/lib/css-base.js","webpack:///./src/app/index.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.resolver.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/home/home.component.ts","webpack:///./~/angular2-uuid/index.js","webpack:///./src/app/app.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./~/rxjs/add/observable/of.js","webpack:///./src/app/app.component.css?e3a3","webpack:///./src/app/home/home.component.css?5810","webpack:///./src/main.browser.ts"],"sourcesContent":["\n// Angular 2\n// rc2 workaround\nimport { enableDebugTools, disableDebugTools } from '@angular/platform-browser';\nimport { enableProdMode, ApplicationRef } from '@angular/core';\n// Environment Providers\nlet PROVIDERS: any[] = [\n  // common env directives\n];\n\n// Angular debug tools in the dev console\n// https://github.com/angular/angular/blob/86405345b781a9dc2438c0fbe3e9409245647019/TOOLS_JS.md\nlet _decorateModuleRef = function identity<T>(value: T): T { return value; };\n\nif ('production' === ENV) {\n  enableProdMode();\n\n  // Production\n  _decorateModuleRef = (modRef: any) => {\n    disableDebugTools();\n\n    return modRef;\n  };\n\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in production\n  ];\n\n} else {\n\n  _decorateModuleRef = (modRef: any) => {\n    const appRef = modRef.injector.get(ApplicationRef);\n    const cmpRef = appRef.components[0];\n\n    let _ng = (<any>window).ng;\n    enableDebugTools(cmpRef);\n    (<any>window).ng.probe = _ng.probe;\n    (<any>window).ng.coreTokens = _ng.coreTokens;\n    return modRef;\n  };\n\n  // Development\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in development\n  ];\n\n}\n\nexport const decorateModuleRef = _decorateModuleRef;\n\nexport const ENV_PROVIDERS = [\n  ...PROVIDERS\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/environment.ts","import { Injectable } from '@angular/core';\n\nexport type InternalStateType = {\n  [key: string]: any\n};\n\n@Injectable()\nexport class AppState {\n  _state: InternalStateType = { };\n\n  constructor() {\n\n  }\n\n  // already return a clone of the current state\n  get state() {\n    return this._state = this._clone(this._state);\n  }\n  // never allow mutation\n  set state(value) {\n    throw new Error('do not mutate the `.state` directly');\n  }\n\n\n  get(prop?: any) {\n    // use our state getter for the clone\n    const state = this.state;\n    return state.hasOwnProperty(prop) ? state[prop] : state;\n  }\n\n  set(prop: string, value: any) {\n    // internally mutate our state\n    return this._state[prop] = value;\n  }\n\n\n  private _clone(object: InternalStateType) {\n    // simple object clone\n    return JSON.parse(JSON.stringify( object ));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.service.ts","export * from './home.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/home/index.ts","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 362\n// module chunks = 1","// App\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/index.ts","/*\n * Angular 2 decorators and services\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\n\nimport { AppState } from './app.service';\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  selector: 'app',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    require('./app.component.css')\n  ],\n  template: `\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n\n    <footer>\n    </footer>\n  `\n})\nexport class AppComponent {\n  constructor(\n      public appState: AppState) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.component.ts","import { NgModule, ApplicationRef } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, PreloadAllModules } from '@angular/router';\nimport { removeNgStyles, createNewHosts, createInputTransfer } from '@angularclass/hmr';\n\n/*\n * Platform and Environment providers/directives/pipes\n */\nimport { ENV_PROVIDERS } from './environment';\nimport { ROUTES } from './app.routes';\n// App is our top level component\nimport { AppComponent } from './app.component';\nimport { APP_RESOLVER_PROVIDERS } from './app.resolver';\nimport { AppState, InternalStateType } from './app.service';\nimport { HomeComponent } from './home';\n\n// Application wide providers\nconst APP_PROVIDERS = [\n  ...APP_RESOLVER_PROVIDERS,\n  AppState\n];\n\ntype StoreType = {\n  state: InternalStateType,\n  restoreInputValues: () => void,\n  disposeOldHosts: () => void\n};\n\n/**\n * `AppModule` is the main entry point into Angular2's bootstraping process\n */\n@NgModule({\n  bootstrap: [ AppComponent ],\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [ // import Angular's modules\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(ROUTES, { useHash: true, preloadingStrategy: PreloadAllModules })\n  ],\n  providers: [ // expose our Services and Providers into Angular's dependency injection\n    ENV_PROVIDERS,\n    APP_PROVIDERS\n  ]\n})\nexport class AppModule {\n  constructor(public appRef: ApplicationRef, public appState: AppState) {}\n\n  hmrOnInit(store: StoreType) {\n    if (!store || !store.state) return;\n    console.log('HMR store', JSON.stringify(store, null, 2));\n    // set state\n    this.appState._state = store.state;\n    // set input values\n    if ('restoreInputValues' in store) {\n      let restoreInputValues = store.restoreInputValues;\n      setTimeout(restoreInputValues);\n    }\n\n    this.appRef.tick();\n    delete store.state;\n    delete store.restoreInputValues;\n  }\n\n  hmrOnDestroy(store: StoreType) {\n    const cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\n    // save state\n    const state = this.appState._state;\n    store.state = state;\n    // recreate root elements\n    store.disposeOldHosts = createNewHosts(cmpLocation);\n    // save input values\n    store.restoreInputValues  = createInputTransfer();\n    // remove styles\n    removeNgStyles();\n  }\n\n  hmrAfterDestroy(store: StoreType) {\n    // display new elements\n    store.disposeOldHosts();\n    delete store.disposeOldHosts;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.module.ts","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class DataResolver implements Resolve<any> {\n  constructor() {\n\n  }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return Observable.of({ res: 'I am data'});\n  }\n}\n\n// an array of services to resolve routes with data\nexport const APP_RESOLVER_PROVIDERS = [\n  DataResolver\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.resolver.ts","import { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home';\n\nimport { DataResolver } from './app.resolver';\n\n\nexport const ROUTES: Routes = [\n  { path: '',      component: HomeComponent },\n  { path: 'home',  component: HomeComponent }\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.routes.ts","import { Component } from '@angular/core';\nimport { UUID } from 'angular2-uuid';\n\n@Component({\n  selector: 'home',  // <home></home>\n  styles: [ require('./home.component.css') ],\n  template: require('./home.component.html')\n})\nexport class HomeComponent {\n  public emails: string[];\n  public filteredEmails: string[];\n  public filteredEmailsMap: any;\n  public filteredResult: string[];\n  public emailNumber: number = 100000;\n  public randomPercentage: number = 50;\n  public ticksArray: number = 0;\n  public ticksMap: number = 0;\n  public expectedCount: number = 0;\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n    this.emails = [];\n    this.filteredEmails = [];\n    this.filteredEmailsMap = new Map();\n    this.filteredResult = [];\n  }\n\n  //Generates a list of random emails with a unique percentage\n  //Inputs:\n  //this.randomPercentage : the percentage set by the user that is used to calculate how many dupes per entry\n  //this.emailNumber : the number of emails to generate, set by the user\n  //Outputs:\n  //this.emails : adds the randomly generated emails to this object\n  //this.expectedCount : calculated and set here, used for a check in the html\n  //Uses:\n  //this.shuffleEmails() : used to shuffle the email list\n  generateEmails(){\n    //Calculate the percentage\n    let percentage = this.randomPercentage / 100;\n    //Calculate the number of unique values to create\n    let uniques = percentage > 0 ? Math.round(this.emailNumber * percentage) : 1;\n    //Calculate the number of dupes to make\n    let dupes = this.emailNumber - uniques;\n    //Create a loop to add entries into this.emails\n    for(let i = 0; i < uniques; i++){\n      //Create a new email and push it\n      let newEmail = UUID.UUID() + '@email.com';\n      this.emails.push(newEmail);\n      //Calculate and add that email a certain number of times based on user input\n      // for(let j = 0; j < (percentage > 0 ? 1 / percentage : this.emailNumber); j++){\n      //   this.emails.push(newEmail);\n      // }\n    }\n    for(let j = 0; j < dupes; j++){\n      let dupe = this.emails[Math.floor((Math.random() * this.emails.length))];\n      this.emails.push(dupe);\n    }\n    //Calculate the expected count of unique emails\n    this.expectedCount = percentage > 0 ? Math.round(this.emailNumber * percentage) : 1;\n    //Shuffle the list so the duplicates are not close to each other\n    this.shuffleEmails();\n  }\n\n  //Shuffles an array of strings\n  //Inputs:\n  //this.emails : shuffles this array so entries are not close to their initial placement\n  //Outputs:\n  //this.emails : changes the structure of this array\n  shuffleEmails() {\n    //Loop through our email list\n    for (let i = this.emails.length; i; i--) {\n        //Generate a random number\n        let j = Math.floor(Math.random() * i);\n        //Swap the two entires\n        [this.emails[i - 1], this.emails[j]] = [this.emails[j], this.emails[i - 1]];\n    }\n    console.log(\"Emails after shuffle, before sort\", this.emails);\n  }\n\n  //THIS IS AN OLD FUNCTION THAT DIDN'T PERFORM AS WELL AS NEEDED, LEAVING TO SHOW THOUGHT PROCESS AND PROGRESSION\n  filterEmailsArray(){\n    let start = new Date();\n    let length = this.emails.length;\n    for(let i = 0; i < length; i++){\n      let email = this.emails[i];\n      if(this.filteredEmails.indexOf(email) < 0){\n        this.filteredEmails.push(email);\n      }\n    }\n    this.ticksArray = Math.abs(new Date().getTime() - start.getTime());\n    console.log(\"Emails\", this.emails.length);\n    console.log(\"Filtered\", this.filteredEmails.length);\n    console.log(\"Contents:\", this.filteredEmails);\n  }\n\n  //Filters an array of randomly generated emails into a mapping with only unique entries, no duplicates\n  //Inputs:\n  //this.emails : filters this list down but not by removing any entries\n  //Outputs:\n  //this.filteredEmailsMap : creates this mapping with only unique entries\n  //this.ticksMap : a calulation of how long it took to filter the data\n  filterEmailsMap(){\n    //Start our timer (essentually)\n    let start = new Date();\n    let length = this.emails.length;\n    //For every entry in our email list, check if that email's key (which is this case is the email itself)\n    //is not already in our mapping.\n    //If we don't find the entry in the map, add it\n    //If it already exists, move on\n    for(let i = 0; i < length; i++){\n      let email = this.emails[i];\n      if(!(email in this.filteredEmailsMap)){\n        this.filteredEmailsMap.set(email, email);\n        this.filteredResult.push(email);\n      }\n    }\n    //Calculate how long it took to process the filter\n    this.ticksMap = Math.abs(new Date().getTime() - start.getTime());\n    // console.log(\"Emails\", this.emails.length);\n    // console.log(\"Filtered\", this.filteredEmailsMap.size);\n    // console.log(\"Contents:\", this.filteredEmailsMap);\n    console.log(\"Results\", this.filteredResult);\n  }\n\n  //Clears all data used to create and filter data\n  //Inputs:\n  //this.emails : clears this\n  //this.filteredEmails : clears this\n  //this.filteredEmailsMap : clears this\n  //Outputs:\n  //this.emails : cleared\n  //this.filteredEmails : cleared\n  //this.filteredEmailsMap : cleared\n  clearAll(){\n    this.emails = [];\n    this.filteredEmails = [];\n    this.filteredEmailsMap.clear();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/home/home.component.ts","\"use strict\";\nvar UUID = (function () {\n    function UUID() {\n        // no-op\n    }\n    UUID.UUID = function () {\n        if (typeof (window.crypto) !== \"undefined\" && typeof (window.crypto.getRandomValues) !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            var buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\n        }\n        else {\n            // Otherwise, just use Math.random\n            // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n            // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n            return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" +\n                this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n        }\n    };\n    UUID.pad4 = function (num) {\n        var ret = num.toString(16);\n        while (ret.length < 4) {\n            ret = \"0\" + ret;\n        }\n        return ret;\n    };\n    UUID.random4 = function () {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    };\n    return UUID;\n}());\nexports.UUID = UUID;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-uuid/index.js\n// module id = 505\n// module chunks = 1","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"html, body{\\n  height: 100%;\\n  font-family: Arial, Helvetica, sans-serif !important;\\n  background-color: #213A72 !important;\\n  color: #edc940 !important;\\n}\\n\\nspan.active {\\n  background-color: gray;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/app.component.css\n// module id = 648\n// module chunks = 1","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".card-container{\\n    text-align: center;\\n     -webkit-animation: fadein 2s; /* Safari, Chrome and Opera > 12.1 */\\n       -moz-animation: fadein 2s; /* Firefox < 16 */\\n        -ms-animation: fadein 2s; /* Internet Explorer */\\n         -o-animation: fadein 2s; /* Opera < 12.1 */\\n            animation: fadein 2s;\\n}\\n\\n.title{\\n    font: 22px bold;\\n    padding-bottom: 20px;\\n}\\n\\n.email-generator-container{\\n    /*border: 1px yellow solid;*/\\n    width: 50%;\\n    min-height: 80px;\\n    margin: 0 auto;\\n}\\n\\ninput[type=text] {\\n    text-align: center;\\n    width: 150px;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    box-sizing: border-box;\\n    font-size: 18px;\\n}\\n\\n.awesome-button{\\n    width: 200px;\\n    height: 50px;\\n    line-height: 50px;\\n    margin: 0 auto;\\n    display: inline-block;\\n    border: #edc940 1px solid;\\n    cursor: pointer;\\n}\\n\\n.awesome-button:hover{\\n    color: #213A72;\\n    background-color: #edc940;\\n}\\n\\n.initial-info{\\n    margin: 0 auto;\\n    width: 200px;\\n    text-align: center;\\n    padding: 20px;\\n}\\n\\n.emails-to-sort{\\n    font-size: 20px;\\n    padding: 10px;\\n}\\n\\n.filters{\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.email-filter-container{\\n    padding: 20px;\\n}\\n\\n.hugeText{\\n    font-size: 30px;\\n}\\n\\n@keyframes fadein {\\n    from { opacity: 0; }\\n    to   { opacity: 1; }\\n}\\n\\n/* Firefox < 16 */\\n@-moz-keyframes fadein {\\n    from { opacity: 0; }\\n    to   { opacity: 1; }\\n}\\n\\n/* Safari, Chrome and Opera > 12.1 */\\n@-webkit-keyframes fadein {\\n    from { opacity: 0; }\\n    to   { opacity: 1; }\\n}\\n\\n/* Internet Explorer */\\n@-ms-keyframes fadein {\\n    from { opacity: 0; }\\n    to   { opacity: 1; }\\n}\\n\\n/* Opera < 12.1 */\\n@-o-keyframes fadein {\\n    from { opacity: 0; }\\n    to   { opacity: 1; }\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/home/home.component.css\n// module id = 649\n// module chunks = 1","module.exports = \"<div class=\\\"card-container\\\">\\n  <div class='title'>\\n    FILTER SOME DANG EMAILS\\n  </div>\\n  <div class=\\\"email-generator-container\\\">\\n    Enter number of emails to generate: <br>\\n    (Be as mean as you want, but it can only handle 10,000. No More. No Less) <br>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"emailNumber\\\"><br>\\n    How unique do you want the entries (in %)?: <br>\\n    (You know, 50% if half are copied and 25% for 4 dupes and 100% for no dupes and -24.7% if you want to break it) <br>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"randomPercentage\\\">%<br>\\n    <div class='awesome-button' (click)=generateEmails()>Generate Emails</div>\\n  </div>\\n  <div class=\\\"initial-info\\\">\\n    <span id=\\\"emails-to-sort\\\">Emails to sort: {{emails.length}}</span><br>\\n    <span *ngIf=\\\"emails.length > 0 && emails.length < 1000\\\">That's not enough, it probably won't work out of spite</span>\\n    <span *ngIf=\\\"emails.length >= 1000 && emails.length < 5000\\\">Getting better, but I'm pretty sure that number breaks it</span>\\n    <span *ngIf=\\\"emails.length >= 5000 && emails.length < 10000\\\">Yeah we can test with this number, but only if you hate puppies. You don't hate puppies do you?</span>\\n    <span *ngIf=\\\"emails.length >= 10000 && emails.length < 50000\\\">Wow, that's obviously too much. Probably won't work</span>\\n    <span *ngIf=\\\"emails.length >= 50000\\\">No way. This will break it for sure...Do it.</span>\\n  </div>\\n  <div class=\\\"filters\\\">\\n    <!--<div class=\\\"email-filter-container\\\">\\n      <div class='awesome-button' (click)=filterEmailsArray()>Filter Emails Array</div><br>\\n      <span>Sorted emails (Array):{{filteredEmails.length}}</span><br>\\n      <span>Total time this whole thing took: {{ticksArray}}ms</span>\\n    </div>-->\\n    <div class=\\\"email-filter-container\\\">\\n      <div class='awesome-button' (click)=filterEmailsMap()>Filter Emails Into A Map</div><br>\\n      <span>Sorted emails count: <br>\\n      Should be: {{expectedCount}} <br>\\n      Actually: {{filteredEmailsMap.size}}</span><br>\\n      <span *ngIf=\\\"filteredEmailsMap.size > 0 && expectedCount == filteredEmailsMap.size\\\">Holy cow! It worked! It probably still didn't work</span>\\n      <span *ngIf=\\\"filteredEmailsMap.size > 0 && expectedCount !== filteredEmailsMap.size\\\">Great, now I'm a failure and I can't spell Colonel</span>\\n      <br>\\n      <span>Total time this whole mess took to sort: {{ticksMap}}ms</span><br>\\n      <span *ngIf=\\\"ticksMap > 60000\\\">You're still here? It failed like an hour ago!</span>\\n      <span *ngIf=\\\"ticksMap <= 60000 && ticksMap >= 30000\\\">This probably isn't going to go over well with anyone</span>\\n      <span *ngIf=\\\"ticksMap < 30000 && ticksMap >= 10000\\\">That's too long, any longer and I bet you would throw your computer</span>\\n      <span *ngIf=\\\"ticksMap < 10000 && ticksMap >= 5000\\\">Close but it's still a colosal failure</span>\\n      <span *ngIf=\\\"ticksMap < 5000 && ticksMap > 1000\\\">Try a little harder, and also stop mumbling swear words to yourself</span>\\n      <span *ngIf=\\\"ticksMap == 1000\\\">Hot dog! Right on the money!</span>\\n      <span *ngIf=\\\"ticksMap < 1000 && ticksMap >= 500\\\">Less than a second, what a world!</span>\\n      <span *ngIf=\\\"ticksMap < 500 && ticksMap >= 100\\\">If only I could cook this fast!</span>\\n      <span *ngIf=\\\"ticksMap < 100 && ticksMap > 0\\\">Ok that's too fast. This thing is obviously cheating</span>\\n    </div>\\n  </div>\\n  <div class='awesome-button' (click)=clearAll()>Clear all this junk</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 651\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/of.js\n// module id = 656\n// module chunks = 1","\n        var result = require(\"!!./../../node_modules/css-loader/index.js!./app.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 670\n// module chunks = 1","\n        var result = require(\"!!./../../../node_modules/css-loader/index.js!./home.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 671\n// module chunks = 1","/*\n * Angular bootstraping\n */\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { decorateModuleRef } from './app/environment';\nimport { bootloader } from '@angularclass/hmr';\n/*\n * App Module\n * our top level module that holds all of our components\n */\nimport { AppModule } from './app';\n\n/*\n * Bootstrap our Angular app with a top level NgModule\n */\nexport function main(): Promise<any> {\n  return platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .then(decorateModuleRef)\n    .catch(err => console.error(err));\n}\n\n// needed for hmr\n// in prod this is replace for document ready\nbootloader(main);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/main.browser.ts"],"mappings":";;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;;;;;;;;;;ACpDA;AAOA;AAGA;AAFA;AAIA;AAGA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAJA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAjCA;AADA;;AAkCA;AAjCA;;;;;;;;;;;;;ACPA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AACA;;;;;;;;;;ACDA;;AAEA;AACA;AAEA;AAEA;;;AAGA;AAgBA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AATA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAGA;AAOA;AATA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAQA;;AAEA;AAkBA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAtCA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAqCA;AAtCA;;;;;;;;;;;ACjDA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAPA;AADA;;AAQA;AAPA;AASA;AACA;AACA;AACA;;;;;;;;;;ACjBA;AAKA;AACA;AACA;AACA;;;;;;;;;;ACTA;AACA;AAOA;AAWA;AANA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAtIA;AALA;AACA;AACA;AACA;AACA;;AAuIA;AAtIA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","sourceRoot":""}